{
  "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_price",
          "type": "bytes4"
        },
        {
          "internalType": "uint256",
          "name": "_scale",
          "type": "uint256"
        }
      ],
      "name": "_unpackPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x2cf4320d9cf3e42bec8ab15158986a17e3fae2ec1ef9bcdf674751cbdacf678b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "transactionIndex": 0,
    "gasUsed": "124225",
    "logsBloom": "0x
    "blockHash": "0xb9392f8fc28d4fc028438a05e3945b7ecf9471a953d83595e09afc004e3a7bd4",
    "transactionHash": "0x2cf4320d9cf3e42bec8ab15158986a17e3fae2ec1ef9bcdf674751cbdacf678b",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "124225",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "507152089c0e48e7dc19179fcca58b5e",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_price\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"_scale\",\"type\":\"uint256\"}],\"name\":\"_unpackPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_unpackPrice(bytes4,uint256)\":{\"details\":\"for tests only. this must be exact replica of the one in RentNft.sol\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Test/Utils.sol\":\"Utils\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Test/Utils.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.8.0;\\n\\ncontract Utils {\\n    /// @dev for tests only. this must be exact replica of the one in\\n    /// RentNft.sol\\n\\n    function _unpackPrice(bytes4 _price, uint256 _scale) external pure returns (uint256) {\\n        uint16 whole = uint16(bytes2(_price));\\n        uint16 decimal = uint16(bytes2(_price << 16));\\n        uint256 decimalScale = _scale / 10000;\\n        if (whole > 9999) {\\n            whole = 9999;\\n        }\\n        uint256 w = whole * _scale;\\n        if (decimal > 9999) {\\n            decimal = 9999;\\n        }\\n        uint256 d = decimal * decimalScale;\\n        uint256 price = w + d;\\n        require(price >= w, \\\"invalid price\\\");\\n        if (price == 0) {\\n            price = decimalScale;\\n        }\\n        return price;\\n    }\\n}\\n\",\"keccak256\":\"0xd6b01a90cf147d1125e7407815bb7278bce2839290c4a359ded369eccb70edf0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610148806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806345bbd14114610030575b600080fd5b61005d6004803603604081101561004657600080fd5b506001600160e01b0319813516906020013561006f565b60408051918252519081900360200190f35b600060f083901c60e084901c61ffff16612710840461270f8311156100945761270f92505b61ffff80841686029061270f90841611156100af5761270f92505b61ffff83168202818101828110156100fe576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b806101065750825b9897505050505050505056fea2646970667358221220460a164ceb28bcea8fa5db4a7764dd25cb9a45e0fb9cf8dda8e3f6d835f5f56964736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806345bbd14114610030575b600080fd5b61005d6004803603604081101561004657600080fd5b506001600160e01b0319813516906020013561006f565b60408051918252519081900360200190f35b600060f083901c60e084901c61ffff16612710840461270f8311156100945761270f92505b61ffff80841686029061270f90841611156100af5761270f92505b61ffff83168202818101828110156100fe576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b806101065750825b9897505050505050505056fea2646970667358221220460a164ceb28bcea8fa5db4a7764dd25cb9a45e0fb9cf8dda8e3f6d835f5f56964736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "_unpackPrice(bytes4,uint256)": {
        "details": "for tests only. this must be exact replica of the one in RentNft.sol"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}