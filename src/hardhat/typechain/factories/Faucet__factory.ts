/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Faucet } from "../Faucet";

export class Faucet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Faucet> {
    return super.deploy(overrides || {}) as Promise<Faucet>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "requestToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061010f806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a037eca914602d575b600080fd5b605060048036036020811015604157600080fd5b50356001600160a01b03166052565b005b6040805163a9059cbb60e01b8152336004820152683635c9adc5dea000006024820152905182916001600160a01b0383169163a9059cbb916044808201926020929091908290030181600087803b15801560ab57600080fd5b505af115801560be573d6000803e3d6000fd5b505050506040513d602081101560d357600080fd5b5050505056fea2646970667358221220c6e251032fc7935663973207e1df972368b9233abe9e1cc0b81a68926162034e64736f6c63430007060033";
