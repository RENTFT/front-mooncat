{
  "language": "Solidity",
  "sources": {
    "src/Test/Utils.sol": {
      "content": "//SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.8.0;\n\ncontract Utils {\n    /// @dev for tests only. this must be exact replica of the one in\n    /// RentNft.sol\n\n    function _unpackPrice(bytes4 _price, uint256 _scale) external pure returns (uint256) {\n        uint16 whole = uint16(bytes2(_price));\n        uint16 decimal = uint16(bytes2(_price << 16));\n        uint256 decimalScale = _scale / 10000;\n        if (whole > 9999) {\n            whole = 9999;\n        }\n        uint256 w = whole * _scale;\n        if (decimal > 9999) {\n            decimal = 9999;\n        }\n        uint256 d = decimal * decimalScale;\n        uint256 price = w + d;\n        require(price >= w, \"invalid price\");\n        if (price == 0) {\n            price = decimalScale;\n        }\n        return price;\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": ["ast"]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}
